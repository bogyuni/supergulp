{
  "{\"sourceRoot\":\"c:\\\\Users\\\\UXdeveloper-Manager\\\\Documents\\\\supergulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"c:\\\\Users\\\\UXdeveloper-Manager\\\\Documents\\\\supergulp\",\"filename\":\"c:\\\\Users\\\\UXdeveloper-Manager\\\\Documents\\\\supergulp\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"c:\\\\Users\\\\UXdeveloper-Manager\\\\Documents\\\\supergulp\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "c:\\Users\\UXdeveloper-Manager\\Documents\\supergulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "c:\\Users\\UXdeveloper-Manager\\Documents\\supergulp",
      "filename": "c:\\Users\\UXdeveloper-Manager\\Documents\\supergulp\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "c:\\Users\\UXdeveloper-Manager\\Documents\\supergulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "c:\\Users\\UXdeveloper-Manager\\Documents\\supergulp\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "c:\\Users\\UXdeveloper-Manager\\Documents\\supergulp\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "c:\\Users\\UXdeveloper-Manager\\Documents\\supergulp",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dev = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_gulpSass[\"default\"].compiler = require(\"node-sass\");\nvar routes = {\n  pug: {\n    watch: \"src/**/*.pug\",\n    src: \"src/*.pug\",\n    dest: \"build\"\n  },\n  img: {\n    src: \"src/img/*\",\n    dest: \"build/img\"\n  },\n  scss: {\n    watch: \"src/scss/**/*.scss\",\n    src: \"src/scss/style.scss\",\n    dest: \"build/css\"\n  }\n};\n\nvar pug = function pug() {\n  return _gulp[\"default\"].src(routes.pug.src).pipe((0, _gulpPug[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.pug.dest));\n};\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"build/\"]);\n};\n\nvar webserver = function webserver() {\n  return _gulp[\"default\"].src(\"build\").pipe((0, _gulpWebserver[\"default\"])({\n    livereload: true\n  }));\n};\n\nvar img = function img() {\n  return _gulp[\"default\"].src(routes.img.src).pipe((0, _gulpImage[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.img.dest));\n};\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(routes.scss.src).pipe((0, _gulpSass[\"default\"])().on(\"error\", _gulpSass[\"default\"].logError)).pipe((0, _gulpAutoprefixer[\"default\"])({\n    overrideBrowserslist: [\"last 2 versions\"]\n  })).pipe((0, _gulpCsso[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.scss.dest));\n};\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch(routes.pug.watch, pug);\n\n  _gulp[\"default\"].watch(routes.img.src, img);\n\n  _gulp[\"default\"].watch(routes.scss.watch, styles);\n};\n\nvar prepare = _gulp[\"default\"].series([clean, img]);\n\nvar assets = _gulp[\"default\"].series([pug, styles]);\n\nvar live = _gulp[\"default\"].parallel([webserver, watch]);\n\nvar dev = _gulp[\"default\"].series([prepare, assets, live]);\n\nexports.dev = dev;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInNhc3MiLCJjb21waWxlciIsInJlcXVpcmUiLCJyb3V0ZXMiLCJwdWciLCJ3YXRjaCIsInNyYyIsImRlc3QiLCJpbWciLCJzY3NzIiwiZ3VscCIsInBpcGUiLCJjbGVhbiIsIndlYnNlcnZlciIsImxpdmVyZWxvYWQiLCJzdHlsZXMiLCJvbiIsImxvZ0Vycm9yIiwib3ZlcnJpZGVCcm93c2Vyc2xpc3QiLCJwcmVwYXJlIiwic2VyaWVzIiwiYXNzZXRzIiwibGl2ZSIsInBhcmFsbGVsIiwiZGV2Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEscUJBQUtDLFFBQUwsR0FBZ0JDLE9BQU8sQ0FBQyxXQUFELENBQXZCO0FBRUEsSUFBTUMsTUFBTSxHQUFHO0FBQ2RDLEVBQUFBLEdBQUcsRUFBRTtBQUNKQyxJQUFBQSxLQUFLLEVBQUUsY0FESDtBQUVKQyxJQUFBQSxHQUFHLEVBQUUsV0FGRDtBQUdKQyxJQUFBQSxJQUFJLEVBQUU7QUFIRixHQURTO0FBTWRDLEVBQUFBLEdBQUcsRUFBRTtBQUNKRixJQUFBQSxHQUFHLEVBQUUsV0FERDtBQUVKQyxJQUFBQSxJQUFJLEVBQUU7QUFGRixHQU5TO0FBVWRFLEVBQUFBLElBQUksRUFBRTtBQUNMSixJQUFBQSxLQUFLLEVBQUUsb0JBREY7QUFFTEMsSUFBQUEsR0FBRyxFQUFFLHFCQUZBO0FBR0xDLElBQUFBLElBQUksRUFBRTtBQUhEO0FBVlEsQ0FBZjs7QUFpQkEsSUFBTUgsR0FBRyxHQUFHLFNBQU5BLEdBQU07QUFBQSxTQUNYTSxpQkFDRUosR0FERixDQUNNSCxNQUFNLENBQUNDLEdBQVAsQ0FBV0UsR0FEakIsRUFFRUssSUFGRixDQUVPLDBCQUZQLEVBR0VBLElBSEYsQ0FHT0QsaUJBQUtILElBQUwsQ0FBVUosTUFBTSxDQUFDQyxHQUFQLENBQVdHLElBQXJCLENBSFAsQ0FEVztBQUFBLENBQVo7O0FBTUEsSUFBTUssS0FBSyxHQUFHLFNBQVJBLEtBQVE7QUFBQSxTQUFNLHFCQUFJLENBQUMsUUFBRCxDQUFKLENBQU47QUFBQSxDQUFkOztBQUVBLElBQU1DLFNBQVMsR0FBRyxTQUFaQSxTQUFZO0FBQUEsU0FBTUgsaUJBQUtKLEdBQUwsQ0FBUyxPQUFULEVBQWtCSyxJQUFsQixDQUF1QiwrQkFBRztBQUFFRyxJQUFBQSxVQUFVLEVBQUU7QUFBZCxHQUFILENBQXZCLENBQU47QUFBQSxDQUFsQjs7QUFFQSxJQUFNTixHQUFHLEdBQUcsU0FBTkEsR0FBTTtBQUFBLFNBQ1hFLGlCQUNFSixHQURGLENBQ01ILE1BQU0sQ0FBQ0ssR0FBUCxDQUFXRixHQURqQixFQUVFSyxJQUZGLENBRU8sNEJBRlAsRUFHRUEsSUFIRixDQUdPRCxpQkFBS0gsSUFBTCxDQUFVSixNQUFNLENBQUNLLEdBQVAsQ0FBV0QsSUFBckIsQ0FIUCxDQURXO0FBQUEsQ0FBWjs7QUFNQSxJQUFNUSxNQUFNLEdBQUcsU0FBVEEsTUFBUztBQUFBLFNBQ2RMLGlCQUNFSixHQURGLENBQ01ILE1BQU0sQ0FBQ00sSUFBUCxDQUFZSCxHQURsQixFQUVFSyxJQUZGLENBRU8sNEJBQU9LLEVBQVAsQ0FBVSxPQUFWLEVBQW1CaEIscUJBQUtpQixRQUF4QixDQUZQLEVBR0VOLElBSEYsQ0FJRSxrQ0FBYTtBQUNaTyxJQUFBQSxvQkFBb0IsRUFBRSxDQUFDLGlCQUFEO0FBRFYsR0FBYixDQUpGLEVBUUVQLElBUkYsQ0FRTywyQkFSUCxFQVNFQSxJQVRGLENBU09ELGlCQUFLSCxJQUFMLENBQVVKLE1BQU0sQ0FBQ00sSUFBUCxDQUFZRixJQUF0QixDQVRQLENBRGM7QUFBQSxDQUFmOztBQVlBLElBQU1GLEtBQUssR0FBRyxTQUFSQSxLQUFRLEdBQU07QUFDbkJLLG1CQUFLTCxLQUFMLENBQVdGLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXQyxLQUF0QixFQUE2QkQsR0FBN0I7O0FBQ0FNLG1CQUFLTCxLQUFMLENBQVdGLE1BQU0sQ0FBQ0ssR0FBUCxDQUFXRixHQUF0QixFQUEyQkUsR0FBM0I7O0FBQ0FFLG1CQUFLTCxLQUFMLENBQVdGLE1BQU0sQ0FBQ00sSUFBUCxDQUFZSixLQUF2QixFQUE4QlUsTUFBOUI7QUFDQSxDQUpEOztBQVFBLElBQU1JLE9BQU8sR0FBR1QsaUJBQUtVLE1BQUwsQ0FBWSxDQUFDUixLQUFELEVBQVFKLEdBQVIsQ0FBWixDQUFoQjs7QUFFQSxJQUFNYSxNQUFNLEdBQUdYLGlCQUFLVSxNQUFMLENBQVksQ0FBQ2hCLEdBQUQsRUFBTVcsTUFBTixDQUFaLENBQWY7O0FBRUEsSUFBTU8sSUFBSSxHQUFHWixpQkFBS2EsUUFBTCxDQUFjLENBQUNWLFNBQUQsRUFBWVIsS0FBWixDQUFkLENBQWI7O0FBRU8sSUFBTW1CLEdBQUcsR0FBR2QsaUJBQUtVLE1BQUwsQ0FBWSxDQUFDRCxPQUFELEVBQVVFLE1BQVYsRUFBa0JDLElBQWxCLENBQVosQ0FBWiIsInNvdXJjZVJvb3QiOiJjOlxcVXNlcnNcXFVYZGV2ZWxvcGVyLU1hbmFnZXJcXERvY3VtZW50c1xcc3VwZXJndWxwIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGd1bHAgZnJvbSBcImd1bHBcIjtcclxuaW1wb3J0IGdwdWcgZnJvbSBcImd1bHAtcHVnXCI7XHJcbmltcG9ydCBkZWwgZnJvbSBcImRlbFwiO1xyXG5pbXBvcnQgd3MgZnJvbSBcImd1bHAtd2Vic2VydmVyXCI7XHJcbmltcG9ydCBpbWFnZSBmcm9tIFwiZ3VscC1pbWFnZVwiO1xyXG5pbXBvcnQgc2FzcyBmcm9tIFwiZ3VscC1zYXNzXCI7XHJcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSBcImd1bHAtYXV0b3ByZWZpeGVyXCI7XHJcbmltcG9ydCBtaW5pQ1NTIGZyb20gXCJndWxwLWNzc29cIjtcclxuXHJcbnNhc3MuY29tcGlsZXIgPSByZXF1aXJlKFwibm9kZS1zYXNzXCIpO1xyXG5cclxuY29uc3Qgcm91dGVzID0ge1xyXG5cdHB1Zzoge1xyXG5cdFx0d2F0Y2g6IFwic3JjLyoqLyoucHVnXCIsXHJcblx0XHRzcmM6IFwic3JjLyoucHVnXCIsXHJcblx0XHRkZXN0OiBcImJ1aWxkXCJcclxuXHR9LFxyXG5cdGltZzoge1xyXG5cdFx0c3JjOiBcInNyYy9pbWcvKlwiLFxyXG5cdFx0ZGVzdDogXCJidWlsZC9pbWdcIlxyXG5cdH0sXHJcblx0c2Nzczoge1xyXG5cdFx0d2F0Y2g6IFwic3JjL3Njc3MvKiovKi5zY3NzXCIsXHJcblx0XHRzcmM6IFwic3JjL3Njc3Mvc3R5bGUuc2Nzc1wiLFxyXG5cdFx0ZGVzdDogXCJidWlsZC9jc3NcIlxyXG5cdH1cclxufTtcclxuXHJcbmNvbnN0IHB1ZyA9ICgpID0+XHJcblx0Z3VscFxyXG5cdFx0LnNyYyhyb3V0ZXMucHVnLnNyYylcclxuXHRcdC5waXBlKGdwdWcoKSlcclxuXHRcdC5waXBlKGd1bHAuZGVzdChyb3V0ZXMucHVnLmRlc3QpKTtcclxuXHJcbmNvbnN0IGNsZWFuID0gKCkgPT4gZGVsKFtcImJ1aWxkL1wiXSk7XHJcblxyXG5jb25zdCB3ZWJzZXJ2ZXIgPSAoKSA9PiBndWxwLnNyYyhcImJ1aWxkXCIpLnBpcGUod3MoeyBsaXZlcmVsb2FkOiB0cnVlIH0pKTtcclxuXHJcbmNvbnN0IGltZyA9ICgpID0+XHJcblx0Z3VscFxyXG5cdFx0LnNyYyhyb3V0ZXMuaW1nLnNyYylcclxuXHRcdC5waXBlKGltYWdlKCkpXHJcblx0XHQucGlwZShndWxwLmRlc3Qocm91dGVzLmltZy5kZXN0KSk7XHJcblxyXG5jb25zdCBzdHlsZXMgPSAoKSA9PlxyXG5cdGd1bHBcclxuXHRcdC5zcmMocm91dGVzLnNjc3Muc3JjKVxyXG5cdFx0LnBpcGUoc2FzcygpLm9uKFwiZXJyb3JcIiwgc2Fzcy5sb2dFcnJvcikpXHJcblx0XHQucGlwZShcclxuXHRcdFx0YXV0b3ByZWZpeGVyKHtcclxuXHRcdFx0XHRvdmVycmlkZUJyb3dzZXJzbGlzdDogW1wibGFzdCAyIHZlcnNpb25zXCJdXHJcblx0XHRcdH0pXHJcblx0XHQpXHJcblx0XHQucGlwZShtaW5pQ1NTKCkpXHJcblx0XHQucGlwZShndWxwLmRlc3Qocm91dGVzLnNjc3MuZGVzdCkpO1xyXG5cclxuY29uc3Qgd2F0Y2ggPSAoKSA9PiB7XHJcblx0Z3VscC53YXRjaChyb3V0ZXMucHVnLndhdGNoLCBwdWcpO1xyXG5cdGd1bHAud2F0Y2gocm91dGVzLmltZy5zcmMsIGltZyk7XHJcblx0Z3VscC53YXRjaChyb3V0ZXMuc2Nzcy53YXRjaCwgc3R5bGVzKTtcclxufTtcclxuXHJcblxyXG5cclxuY29uc3QgcHJlcGFyZSA9IGd1bHAuc2VyaWVzKFtjbGVhbiwgaW1nXSk7XHJcblxyXG5jb25zdCBhc3NldHMgPSBndWxwLnNlcmllcyhbcHVnLCBzdHlsZXNdKTtcclxuXHJcbmNvbnN0IGxpdmUgPSBndWxwLnBhcmFsbGVsKFt3ZWJzZXJ2ZXIsIHdhdGNoXSk7XHJcblxyXG5leHBvcnQgY29uc3QgZGV2ID0gZ3VscC5zZXJpZXMoW3ByZXBhcmUsIGFzc2V0cywgbGl2ZV0pO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "scss",
        "gulp",
        "pipe",
        "clean",
        "webserver",
        "livereload",
        "styles",
        "on",
        "logError",
        "overrideBrowserslist",
        "prepare",
        "series",
        "assets",
        "live",
        "parallel",
        "dev"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEAA,qBAAKC,QAAL,GAAgBC,OAAO,CAAC,WAAD,CAAvB;AAEA,IAAMC,MAAM,GAAG;AACdC,EAAAA,GAAG,EAAE;AACJC,IAAAA,KAAK,EAAE,cADH;AAEJC,IAAAA,GAAG,EAAE,WAFD;AAGJC,IAAAA,IAAI,EAAE;AAHF,GADS;AAMdC,EAAAA,GAAG,EAAE;AACJF,IAAAA,GAAG,EAAE,WADD;AAEJC,IAAAA,IAAI,EAAE;AAFF,GANS;AAUdE,EAAAA,IAAI,EAAE;AACLJ,IAAAA,KAAK,EAAE,oBADF;AAELC,IAAAA,GAAG,EAAE,qBAFA;AAGLC,IAAAA,IAAI,EAAE;AAHD;AAVQ,CAAf;;AAiBA,IAAMH,GAAG,GAAG,SAANA,GAAM;AAAA,SACXM,iBACEJ,GADF,CACMH,MAAM,CAACC,GAAP,CAAWE,GADjB,EAEEK,IAFF,CAEO,0BAFP,EAGEA,IAHF,CAGOD,iBAAKH,IAAL,CAAUJ,MAAM,CAACC,GAAP,CAAWG,IAArB,CAHP,CADW;AAAA,CAAZ;;AAMA,IAAMK,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,QAAD,CAAJ,CAAN;AAAA,CAAd;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMH,iBAAKJ,GAAL,CAAS,OAAT,EAAkBK,IAAlB,CAAuB,+BAAG;AAAEG,IAAAA,UAAU,EAAE;AAAd,GAAH,CAAvB,CAAN;AAAA,CAAlB;;AAEA,IAAMN,GAAG,GAAG,SAANA,GAAM;AAAA,SACXE,iBACEJ,GADF,CACMH,MAAM,CAACK,GAAP,CAAWF,GADjB,EAEEK,IAFF,CAEO,4BAFP,EAGEA,IAHF,CAGOD,iBAAKH,IAAL,CAAUJ,MAAM,CAACK,GAAP,CAAWD,IAArB,CAHP,CADW;AAAA,CAAZ;;AAMA,IAAMQ,MAAM,GAAG,SAATA,MAAS;AAAA,SACdL,iBACEJ,GADF,CACMH,MAAM,CAACM,IAAP,CAAYH,GADlB,EAEEK,IAFF,CAEO,4BAAOK,EAAP,CAAU,OAAV,EAAmBhB,qBAAKiB,QAAxB,CAFP,EAGEN,IAHF,CAIE,kCAAa;AACZO,IAAAA,oBAAoB,EAAE,CAAC,iBAAD;AADV,GAAb,CAJF,EAQEP,IARF,CAQO,2BARP,EASEA,IATF,CASOD,iBAAKH,IAAL,CAAUJ,MAAM,CAACM,IAAP,CAAYF,IAAtB,CATP,CADc;AAAA,CAAf;;AAYA,IAAMF,KAAK,GAAG,SAARA,KAAQ,GAAM;AACnBK,mBAAKL,KAAL,CAAWF,MAAM,CAACC,GAAP,CAAWC,KAAtB,EAA6BD,GAA7B;;AACAM,mBAAKL,KAAL,CAAWF,MAAM,CAACK,GAAP,CAAWF,GAAtB,EAA2BE,GAA3B;;AACAE,mBAAKL,KAAL,CAAWF,MAAM,CAACM,IAAP,CAAYJ,KAAvB,EAA8BU,MAA9B;AACA,CAJD;;AAQA,IAAMI,OAAO,GAAGT,iBAAKU,MAAL,CAAY,CAACR,KAAD,EAAQJ,GAAR,CAAZ,CAAhB;;AAEA,IAAMa,MAAM,GAAGX,iBAAKU,MAAL,CAAY,CAAChB,GAAD,EAAMW,MAAN,CAAZ,CAAf;;AAEA,IAAMO,IAAI,GAAGZ,iBAAKa,QAAL,CAAc,CAACV,SAAD,EAAYR,KAAZ,CAAd,CAAb;;AAEO,IAAMmB,GAAG,GAAGd,iBAAKU,MAAL,CAAY,CAACD,OAAD,EAAUE,MAAV,EAAkBC,IAAlB,CAAZ,CAAZ",
      "sourceRoot": "c:\\Users\\UXdeveloper-Manager\\Documents\\supergulp",
      "sourcesContent": [
        "import gulp from \"gulp\";\r\nimport gpug from \"gulp-pug\";\r\nimport del from \"del\";\r\nimport ws from \"gulp-webserver\";\r\nimport image from \"gulp-image\";\r\nimport sass from \"gulp-sass\";\r\nimport autoprefixer from \"gulp-autoprefixer\";\r\nimport miniCSS from \"gulp-csso\";\r\n\r\nsass.compiler = require(\"node-sass\");\r\n\r\nconst routes = {\r\n\tpug: {\r\n\t\twatch: \"src/**/*.pug\",\r\n\t\tsrc: \"src/*.pug\",\r\n\t\tdest: \"build\"\r\n\t},\r\n\timg: {\r\n\t\tsrc: \"src/img/*\",\r\n\t\tdest: \"build/img\"\r\n\t},\r\n\tscss: {\r\n\t\twatch: \"src/scss/**/*.scss\",\r\n\t\tsrc: \"src/scss/style.scss\",\r\n\t\tdest: \"build/css\"\r\n\t}\r\n};\r\n\r\nconst pug = () =>\r\n\tgulp\r\n\t\t.src(routes.pug.src)\r\n\t\t.pipe(gpug())\r\n\t\t.pipe(gulp.dest(routes.pug.dest));\r\n\r\nconst clean = () => del([\"build/\"]);\r\n\r\nconst webserver = () => gulp.src(\"build\").pipe(ws({ livereload: true }));\r\n\r\nconst img = () =>\r\n\tgulp\r\n\t\t.src(routes.img.src)\r\n\t\t.pipe(image())\r\n\t\t.pipe(gulp.dest(routes.img.dest));\r\n\r\nconst styles = () =>\r\n\tgulp\r\n\t\t.src(routes.scss.src)\r\n\t\t.pipe(sass().on(\"error\", sass.logError))\r\n\t\t.pipe(\r\n\t\t\tautoprefixer({\r\n\t\t\t\toverrideBrowserslist: [\"last 2 versions\"]\r\n\t\t\t})\r\n\t\t)\r\n\t\t.pipe(miniCSS())\r\n\t\t.pipe(gulp.dest(routes.scss.dest));\r\n\r\nconst watch = () => {\r\n\tgulp.watch(routes.pug.watch, pug);\r\n\tgulp.watch(routes.img.src, img);\r\n\tgulp.watch(routes.scss.watch, styles);\r\n};\r\n\r\n\r\n\r\nconst prepare = gulp.series([clean, img]);\r\n\r\nconst assets = gulp.series([pug, styles]);\r\n\r\nconst live = gulp.parallel([webserver, watch]);\r\n\r\nexport const dev = gulp.series([prepare, assets, live]);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1582613465784
  }
}